model_BIC <- getBestModel(network_models, "BIC")   # if no criteria is specified, the best BIC is used
model_BIC
library(future)
plan(multisession, workers = 2)
n <- nrow(microbiome)
subs <- replicate(10, sample.int(n, size = n/2), simplify = FALSE)
stability_selection(network_models, subsamples = subs)
model_StARS <- getBestModel(network_models, "StARS")
plot(network_models, "stability")
future::plan("sequential")
model_StARS
my_graph <- plot(model_StARS, plot = FALSE)
my_graph
plot(model_StARS)
plot(model_StARS, type = "support", output = "corrplot")
data.frame(
fitted   = as.vector(fitted(model_StARS)),
observed = as.vector(microbiome$Abundance)
) %>%
ggplot(aes(x = observed, y = fitted)) +
geom_point(size = .5, alpha =.25 ) +
scale_x_log10(limits = c(1,1000)) +
scale_y_log10(limits = c(1,1000)) +
theme_bw() + annotation_logticks()
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index)
metadata <- read_csv("metadata_test.csv")
joined_data <- inner_join(abundance, metadata, by = "id")
metadata_ordered <- joined_data %>%
select(location,sex,rp)
abundance_ordered <- joined_data %>%
select(-id) %>%
select(!biome:shannon_entropy) %>%
rename_with(~sub('.*__(.*$)','\\1', .))
#Check to make sure this doesn't include id in abundance matrix.
microbiome <- prepare_data(abundance_ordered, metadata_ordered, offset = "GMPR")
str(microbiome)
View(microbiome)
plot.new()
corrplot::corrplot(
t(log(1 + abundance_ordered)),
is.corr = FALSE,
addgrid.col = NA,
tl.cex = 0.5,
)
network_models <- PLNnetwork(Abundance ~ 1 + offset(log(Offset)), data = microbiome)
network_models
network_models$criteria %>% head() %>% knitr::kable()
network_models$convergence %>% head() %>% knitr::kable()
plot(network_models, "diagnostic")
plot(network_models)
coefficient_path(network_models, corr = TRUE) %>%
ggplot(aes(x = Penalty, y = Coeff, group = Edge, colour = Edge)) +
geom_line(show.legend = FALSE) +  coord_trans(x="log10") + theme_bw()
model_pen <- getModel(network_models, network_models$penalties[20]) # give some sparsity
model_BIC <- getBestModel(network_models, "BIC")   # if no criteria is specified, the best BIC is used
model_BIC
library(future)
plan(multisession, workers = 2)
n <- nrow(microbiome)
subs <- replicate(10, sample.int(n, size = n/2), simplify = FALSE)
stability_selection(network_models, subsamples = subs)
model_StARS <- getBestModel(network_models, "StARS")
plot(network_models, "stability")
future::plan("sequential")
model_StARS
my_graph <- plot(model_StARS, plot = FALSE)
my_graph
plot(model_StARS)
plot(model_StARS, type = "support", output = "corrplot")
data.frame(
fitted   = as.vector(fitted(model_StARS)),
observed = as.vector(microbiome$Abundance)
) %>%
ggplot(aes(x = observed, y = fitted)) +
geom_point(size = .5, alpha =.25 ) +
scale_x_log10(limits = c(1,1000)) +
scale_y_log10(limits = c(1,1000)) +
theme_bw() + annotation_logticks()
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index)
metadata <- read_csv("metadata_test.csv")
joined_data <- inner_join(abundance, metadata, by = "id")
metadata_ordered <- joined_data %>%
select(location,sex,rp)
abundance_ordered <- joined_data %>%
select(-id) %>%
select(!biome:shannon_entropy) %>%
rename_with(~sub('.*__(.*$)','\\1', .))
#Check to make sure this doesn't include id in abundance matrix.
microbiome <- prepare_data(abundance_ordered, metadata_ordered, offset = "GMPR")
str(microbiome)
View(microbiome)
plot.new()
corrplot::corrplot(
t(log(1 + abundance_ordered)),
is.corr = FALSE,
addgrid.col = NA,
tl.cex = 0.5,
)
network_models <- PLNnetwork(Abundance ~ 1 + offset(log(Offset)), data = microbiome)
network_models
network_models$criteria %>% head() %>% knitr::kable()
network_models$convergence %>% head() %>% knitr::kable()
plot(network_models, "diagnostic")
plot(network_models)
coefficient_path(network_models, corr = TRUE) %>%
ggplot(aes(x = Penalty, y = Coeff, group = Edge, colour = Edge)) +
geom_line(show.legend = FALSE) +  coord_trans(x="log10") + theme_bw()
model_pen <- getModel(network_models, network_models$penalties[20]) # give some sparsity
model_BIC <- getBestModel(network_models, "BIC")   # if no criteria is specified, the best BIC is used
model_BIC
library(future)
plan(multisession, workers = 2)
n <- nrow(microbiome)
subs <- replicate(10, sample.int(n, size = n/2), simplify = FALSE)
stability_selection(network_models, subsamples = subs)
model_StARS <- getBestModel(network_models, "StARS")
plot(network_models, "stability")
future::plan("sequential")
model_StARS
my_graph <- plot(model_StARS, plot = FALSE)
my_graph
plot(model_StARS)
plot(model_StARS, type = "support", output = "corrplot")
data.frame(
fitted   = as.vector(fitted(model_StARS)),
observed = as.vector(microbiome$Abundance)
) %>%
ggplot(aes(x = observed, y = fitted)) +
geom_point(size = .5, alpha =.25 ) +
scale_x_log10(limits = c(1,1000)) +
scale_y_log10(limits = c(1,1000)) +
theme_bw() + annotation_logticks()
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index)
metadata <- read_csv("metadata_test.csv")
joined_data <- inner_join(abundance, metadata, by = "id")
metadata_ordered <- joined_data %>%
select(location,sex,rp)
abundance_ordered <- joined_data %>%
select(-id) %>%
select(!biome:shannon_entropy) %>%
rename_with(~sub('.*__(.*$)','\\1', .))
#Check to make sure this doesn't include id in abundance matrix.
microbiome <- prepare_data(abundance_ordered, metadata_ordered, offset = "GMPR")
str(microbiome)
View(microbiome)
plot.new()
corrplot::corrplot(
t(log(1 + abundance_ordered)),
is.corr = FALSE,
addgrid.col = NA,
tl.cex = 0.5,
)
network_models <- PLNnetwork(Abundance ~ rp + offset(log(Offset)), data = microbiome)
network_models
network_models$criteria %>% head() %>% knitr::kable()
network_models$convergence %>% head() %>% knitr::kable()
plot(network_models, "diagnostic")
plot(network_models)
coefficient_path(network_models, corr = TRUE) %>%
ggplot(aes(x = Penalty, y = Coeff, group = Edge, colour = Edge)) +
geom_line(show.legend = FALSE) +  coord_trans(x="log10") + theme_bw()
model_pen <- getModel(network_models, network_models$penalties[20]) # give some sparsity
model_BIC <- getBestModel(network_models, "BIC")   # if no criteria is specified, the best BIC is used
model_BIC
library(future)
plan(multisession, workers = 2)
n <- nrow(microbiome)
subs <- replicate(10, sample.int(n, size = n/2), simplify = FALSE)
stability_selection(network_models, subsamples = subs)
model_StARS <- getBestModel(network_models, "StARS")
plot(network_models, "stability")
future::plan("sequential")
model_StARS
my_graph <- plot(model_StARS, plot = FALSE)
my_graph
plot(model_StARS)
plot(model_StARS, type = "support", output = "corrplot")
data.frame(
fitted   = as.vector(fitted(model_StARS)),
observed = as.vector(microbiome$Abundance)
) %>%
ggplot(aes(x = observed, y = fitted)) +
geom_point(size = .5, alpha =.25 ) +
scale_x_log10(limits = c(1,1000)) +
scale_y_log10(limits = c(1,1000)) +
theme_bw() + annotation_logticks()
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index)
metadata <- read_csv("metadata_test.csv")
joined_data <- inner_join(abundance, metadata, by = "id")
metadata_ordered <- joined_data %>%
select(location,sex,rp)
abundance_ordered <- joined_data %>%
select(-id) %>%
select(!biome:shannon_entropy) %>%
rename_with(~sub('.*__(.*$)','\\1', .))
#Check to make sure this doesn't include id in abundance matrix.
microbiome <- prepare_data(abundance_ordered, metadata_ordered, offset = "GMPR")
str(microbiome)
View(microbiome)
plot.new()
corrplot::corrplot(
t(log(1 + abundance_ordered)),
is.corr = FALSE,
addgrid.col = NA,
tl.cex = 0.5,
)
network_models <- PLNnetwork(Abundance ~ (rp * site * sex)^2 + offset(log(Offset)), data = microbiome)
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index)
metadata <- read_csv("metadata_test.csv")
joined_data <- inner_join(abundance, metadata, by = "id")
metadata_ordered <- joined_data %>%
select(location,sex,rp)
abundance_ordered <- joined_data %>%
select(-id) %>%
select(!biome:shannon_entropy) %>%
rename_with(~sub('.*__(.*$)','\\1', .))
#Check to make sure this doesn't include id in abundance matrix.
microbiome <- prepare_data(abundance_ordered, metadata_ordered, offset = "GMPR")
str(microbiome)
View(microbiome)
plot.new()
corrplot::corrplot(
t(log(1 + abundance_ordered)),
is.corr = FALSE,
addgrid.col = NA,
tl.cex = 0.5,
)
network_models <- PLNnetwork(Abundance ~ (rp * location * sex)^2 + offset(log(Offset)), data = microbiome)
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index)
network_models <- PLNnetwork(Abundance ~ rp * location * sex + offset(log(Offset)), data = microbiome)
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index)
metadata <- read_csv("metadata_test.csv")
joined_data <- inner_join(abundance, metadata, by = "id")
metadata_ordered <- joined_data %>%
select(location,sex,rp)
abundance_ordered <- joined_data %>%
select(-id) %>%
select(!biome:shannon_entropy) %>%
rename_with(~sub('.*__(.*$)','\\1', .))
#Check to make sure this doesn't include id in abundance matrix.
microbiome <- prepare_data(abundance_ordered, metadata_ordered, offset = "GMPR")
str(microbiome)
View(microbiome)
plot.new()
corrplot::corrplot(
t(log(1 + abundance_ordered)),
is.corr = FALSE,
addgrid.col = NA,
tl.cex = 0.5,
)
network_models <- PLNnetwork(Abundance ~ rp + location + sex + offset(log(Offset)), data = microbiome)
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index)
metadata <- read_csv("metadata_test.csv")
joined_data <- inner_join(abundance, metadata, by = "id")
metadata_ordered <- joined_data %>%
select(location,sex,rp)
abundance_ordered <- joined_data %>%
select(-id) %>%
select(!biome:shannon_entropy) %>%
rename_with(~sub('.*__(.*$)','\\1', .))
#Check to make sure this doesn't include id in abundance matrix.
microbiome <- prepare_data(abundance_ordered, metadata_ordered, offset = "GMPR")
str(microbiome)
View(microbiome)
plot.new()
corrplot::corrplot(
t(log(1 + abundance_ordered)),
is.corr = FALSE,
addgrid.col = NA,
tl.cex = 0.5,
)
network_models <- PLNnetwork(Abundance ~ sex + offset(log(Offset)), data = microbiome)
network_models
network_models$criteria %>% head() %>% knitr::kable()
network_models$convergence %>% head() %>% knitr::kable()
plot(network_models, "diagnostic")
plot(network_models)
coefficient_path(network_models, corr = TRUE) %>%
ggplot(aes(x = Penalty, y = Coeff, group = Edge, colour = Edge)) +
geom_line(show.legend = FALSE) +  coord_trans(x="log10") + theme_bw()
model_pen <- getModel(network_models, network_models$penalties[20]) # give some sparsity
model_BIC <- getBestModel(network_models, "BIC")   # if no criteria is specified, the best BIC is used
model_BIC
library(future)
plan(multisession, workers = 2)
n <- nrow(microbiome)
subs <- replicate(10, sample.int(n, size = n/2), simplify = FALSE)
stability_selection(network_models, subsamples = subs)
model_StARS <- getBestModel(network_models, "StARS")
plot(network_models, "stability")
future::plan("sequential")
model_StARS
my_graph <- plot(model_StARS, plot = FALSE)
my_graph
plot(model_StARS)
plot(model_StARS, type = "support", output = "corrplot")
data.frame(
fitted   = as.vector(fitted(model_StARS)),
observed = as.vector(microbiome$Abundance)
) %>%
ggplot(aes(x = observed, y = fitted)) +
geom_point(size = .5, alpha =.25 ) +
scale_x_log10(limits = c(1,1000)) +
scale_y_log10(limits = c(1,1000)) +
theme_bw() + annotation_logticks()
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index) %>%
pivot_wider(names_from=index)
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index) %>%
pivot_wider(names_from=id)
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index) %>%
pivot_wider(names_from=id, values_from = c("C-BISB124204401":"C-RR325204301-2"))
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index) %>%
pivot_wider(names_from=id, values_from = c(C-BISB124204401:C-RR325204301-2))
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index) %>%
pivot_wider(names_from=id, values_from = (-id))
View(abundance)
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index) %>%
pivot_wider(names_from=id, values_from = (`C-RR325204301-2`))
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "reads_top12", col_names = TRUE) %>%
rename(id = index)
View(abundance)
?tp
View(abundance)
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "sum_prev_top50", col_names = TRUE) %>%
rename(id = index)
View(abundance)
View(abundance)
test <- pivot_wider(abundance, names_from=id, values_from = C-RR325204301-2)
test <- pivot_wider(abundance, names_from=id, values_from = `C-RR325204301-2`)
View(test)
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "sum_prev_top50", col_names = TRUE) %>%
rename(id = index)
t(abundance)
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "sum_prev_top50", col_names = TRUE) %>%
rename(id = index) %>%
t()
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "sum_prev_top50", col_names = TRUE) %>%
rename(id = index) %>%
select(!sum, !prevalence) %>%
t()
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "sum_prev_top50", col_names = TRUE) %>%
rename(id = index) %>%
select(!sum, !prevalence) %>%
t()
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "sum_prev_top50", col_names = TRUE) %>%
rename(id = index) %>%
select(!sum:prevalence) %>%
t()
View(abundance_ordered)
joined_data <- inner_join(abundance, metadata, by = "id")
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "sum_prev_top50_tp", col_names = TRUE) %>%
rename(id = index)
View(abundance)
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "sum_prev_top50_tp", col_names = TRUE) %>%
rename(id = index)
metadata <- read_csv("metadata_test.csv")
joined_data <- inner_join(abundance, metadata, by = "id")
metadata_ordered <- joined_data %>%
select(location,sex,rp)
abundance_ordered <- joined_data %>%
select(-id) %>%
select(!biome:shannon_entropy) %>%
rename_with(~sub('.*__(.*$)','\\1', .))
bundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "sum_prev_top50_tp", col_names = TRUE) %>%
rename(id = index)
metadata <- read_csv("metadata_test.csv")
joined_data <- inner_join(abundance, metadata, by = "id")
metadata_ordered <- joined_data %>%
select(location,sex,rp)
abundance_ordered <- joined_data %>%
select(-id) %>%
select(!biome:shannon_entropy) %>%
rename_with(~sub('.*__(.*$)','\\1', .))
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "sum_prev_top50_tp", col_names = TRUE) %>%
rename(id = index)
metadata <- read_csv("metadata_test.csv")
joined_data <- inner_join(abundance, metadata, by = "id")
metadata_ordered <- joined_data %>%
select(location,sex,rp)
abundance_ordered <- joined_data %>%
select(-id) %>%
select(!biome:shannon_entropy) %>%
rename_with(~sub('.*__(.*$)','\\1', .))
View(joined_data)
View(joined_data)
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "sum_prev_top50_tp", col_names = TRUE) %>%
rename(id = index)
metadata <- read_csv("metadata_test.csv")
joined_data <- inner_join(abundance, metadata, by = "id")
metadata_ordered <- joined_data %>%
select(location,sex,rp)
abundance_ordered <- joined_data %>%
select(-id) %>%
select(!biome:shannon_entropy) %>%
rename_with(~sub('.*__(.*$)','\\1', .))
microbiome <- prepare_data(abundance_ordered, metadata_ordered, offset = "GMPR")
str(microbiome)
View(microbiome)
plot.new()
corrplot::corrplot(
t(log(1 + abundance_ordered)),
is.corr = FALSE,
addgrid.col = NA,
tl.cex = 0.5,
)
network_models <- PLNnetwork(Abundance ~ 1 + offset(log(Offset)), data = microbiome)
network_models
network_models$criteria %>% head() %>% knitr::kable()
network_models$convergence %>% head() %>% knitr::kable()
plot(network_models, "diagnostic")
plot(network_models)
coefficient_path(network_models, corr = TRUE) %>%
ggplot(aes(x = Penalty, y = Coeff, group = Edge, colour = Edge)) +
geom_line(show.legend = FALSE) +  coord_trans(x="log10") + theme_bw()
model_pen <- getModel(network_models, network_models$penalties[20]) # give some sparsity
model_BIC <- getBestModel(network_models, "BIC")   # if no criteria is specified, the best BIC is used
model_BIC
library(future)
plan(multisession, workers = 2)
n <- nrow(microbiome)
subs <- replicate(10, sample.int(n, size = n/2), simplify = FALSE)
stability_selection(network_models, subsamples = subs)
model_StARS <- getBestModel(network_models, "StARS")
plot(network_models, "stability")
future::plan("sequential")
model_StARS
my_graph <- plot(model_StARS, plot = FALSE)
my_graph
plot(model_StARS)
plot(model_StARS, type = "support", output = "corrplot")
data.frame(
fitted   = as.vector(fitted(model_StARS)),
observed = as.vector(microbiome$Abundance)
) %>%
ggplot(aes(x = observed, y = fitted)) +
geom_point(size = .5, alpha =.25 ) +
scale_x_log10(limits = c(1,1000)) +
scale_y_log10(limits = c(1,1000)) +
theme_bw() + annotation_logticks()
View(my_graph)
View(my_graph)
View(my_graph)
View(my_graph)
abundance<-read_sheet("https://docs.google.com/spreadsheets/d/120PG7RZufx3aKSijSOKWAMKIstlERbL9ryG98aCj4RM/edit?usp=sharing", sheet = "sum_prev_top50_tp", col_names = TRUE) %>%
rename(id = index)
metadata <- read_csv("metadata_test.csv")
joined_data <- inner_join(abundance, metadata, by = "id")
metadata_ordered <- joined_data %>%
select(location,sex,rp)
abundance_ordered <- joined_data %>%
select(-id) %>%
select(!biome:shannon_entropy) %>%
rename_with(~sub('.*__(.*$)','\\1', .))
#Check to make sure this doesn't include id in abundance matrix.
microbiome <- prepare_data(abundance_ordered, metadata_ordered, offset = "GMPR")
str(microbiome)
View(microbiome)
plot.new()
corrplot::corrplot(
t(log(1 + abundance_ordered)),
is.corr = FALSE,
addgrid.col = NA,
tl.cex = 0.5,
)
network_models <- PLNnetwork(Abundance ~ 1 + offset(log(Offset)), data = microbiome)
network_models
network_models$criteria %>% head() %>% knitr::kable()
network_models$convergence %>% head() %>% knitr::kable()
plot(network_models, "diagnostic")
plot(network_models)
coefficient_path(network_models, corr = TRUE) %>%
ggplot(aes(x = Penalty, y = Coeff, group = Edge, colour = Edge)) +
geom_line(show.legend = FALSE) +  coord_trans(x="log10") + theme_bw()
model_pen <- getModel(network_models, network_models$penalties[20]) # give some sparsity
model_BIC <- getBestModel(network_models, "BIC")   # if no criteria is specified, the best BIC is used
model_BIC
library(future)
plan(multisession, workers = 2)
n <- nrow(microbiome)
subs <- replicate(10, sample.int(n, size = n/2), simplify = FALSE)
stability_selection(network_models, subsamples = subs)
model_StARS <- getBestModel(network_models, "StARS")
plot(network_models, "stability")
future::plan("sequential")
model_StARS
my_graph <- plot(model_StARS, plot = FALSE)
my_graph
plot(model_StARS)
plot(model_StARS, type = "support", output = "corrplot")
data.frame(
fitted   = as.vector(fitted(model_StARS)),
observed = as.vector(microbiome$Abundance)
) %>%
ggplot(aes(x = observed, y = fitted)) +
geom_point(size = .5, alpha =.25 ) +
scale_x_log10(limits = c(1,1000)) +
scale_y_log10(limits = c(1,1000)) +
theme_bw() + annotation_logticks()
